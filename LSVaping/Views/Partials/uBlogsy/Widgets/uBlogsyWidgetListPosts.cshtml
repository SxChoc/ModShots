@*
    Lists posts.
*@

@using System.Linq
@using uBlogsy.BusinessLogic
@using uHelpsy.Extensions
@inherits UmbracoTemplatePage
@{
    const int ITEMS_PER_PAGE = 20; // for testing

    // image settings
    const string defaultImage = null; // change this if want a default image. eg "http://placekitten.com/g/25/25/", else make it null (no "")
    const int imageHieght = -1; // -1 if no height specified
    const int imageWidth = 300;

    // get item count
    var itemLimit = (int)ViewData["ItemLimit"];

    var nodes = PostService.Instance.GetPosts(Model.Content).Take(itemLimit).ToIPublishedContent(true);

    @RenderForWidget(nodes, imageHieght, imageWidth, defaultImage)
}




@helper RenderForWidget(IEnumerable<IPublishedContent> nodes, int imageHieght, int imageWidth, string defaultImage)
{
    <div class="layout-title">
        <h2>Recent Posts</h2>
    </div>
    <div class="layout-list recent-post">
        <ul>
            <!--start-OurStore-post-->
            @foreach (var n in nodes)
            {
                <li>
                    <div class="row">
                        <div class="col-sm-4 col-xs-4 pad-right">
                            <div class="post-thumb">
                                <a href="@n.Url()">
                                    @{
                                        var imageString = n.GetProperty("blogSmallImage").DataValue.ToString();
                                        if (imageString != "")
                                        {
                                            var imageGuidUdi = GuidUdi.Parse(imageString);
                                            // Get the ID of the node!
                                            var imageNodeId = ApplicationContext.Current.Services.EntityService.GetIdForKey(imageGuidUdi.Guid, (UmbracoObjectTypes)Enum.Parse(typeof(UmbracoObjectTypes), imageGuidUdi.EntityType, true));

                                            // Finally, get the node.
                                            var imageNode = Umbraco.TypedMedia(imageNodeId.Result);

                                            <img src="@imageNode.Url" alt="@n.GetPropertyValue("uBlogsyContentTitle")">
                                        }
                                    }
                                </a>
                            </div>
                        </div>
                        <div class="col-sm-8 col-xs-8 pad-left">
                            <div class="post-info">
                                <a href="@n.Url()" title="@n.GetPropertyValue("uBlogsyNavigationTitle")">
                                    @*@RenderPostImage(n, imageHieght, imageWidth, defaultImage)*@
                                    @n.GetPropertyValue("uBlogsyNavigationTitle")
                                    <span class="re-date">@(n.GetPropertyValue<DateTime>("uBlogsyPostDate").ToString("d MMMM yyyy"))</span>
                                </a>
                                
                            </div>
                        </div>
                    </div>
                    
                </li>
            }
            <!--end-OurStore-post-->
        </ul>
    </div>
}





@helper RenderPostImage(IPublishedContent node, int imageHieght, int imageWidth, string defaultImage)
{
    var imageId = node.GetPropertyValue<string>("uBlogsyPostImage");

    if (string.IsNullOrWhiteSpace(imageId) && string.IsNullOrWhiteSpace(defaultImage))
    {
        // no property or default so do nothing
        return;
    }

    var imageData = new Dictionary<string, object>()
            {
                 {"Alias", "uBlogsyPostImage"},
                 {"Suffix", ""},
                 {"Height", imageHieght},
                 {"Width", imageWidth},
                 {"CssClass", "uBlogsy_post_image"},
                 {"Title", "Main Image"},
                 {"Map", string.Empty },
                 {"DefaultImage", defaultImage},
                 {"Node", node}
             };

    <figure class="uBlogsy_post_list_image">
        @Html.Partial("~/Views/Partials/uBlogsy/Shared/uBlogsyShowImage.cshtml", imageData)     
    </figure>
}
